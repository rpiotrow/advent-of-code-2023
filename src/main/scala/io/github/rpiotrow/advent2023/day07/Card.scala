package io.github.rpiotrow.advent2023.day07

import zio.{IO, ZIO}

enum Card:
  case ðŸ‚² extends Card
  case ðŸ‚³ extends Card
  case ðŸ‚´ extends Card
  case ðŸ‚µ extends Card
  case ðŸ‚¶ extends Card
  case ðŸ‚· extends Card
  case ðŸ‚¸ extends Card
  case ðŸ‚¹ extends Card
  case ðŸ‚º extends Card
  case ðŸ‚» extends Card
  case ðŸ‚½ extends Card
  case ðŸ‚¾ extends Card
  case ðŸ‚± extends Card

object Card:
  def fromChar(c: Char): IO[String, Card] =
    c match
      case 'A' => ZIO.succeed(ðŸ‚±)
      case 'K' => ZIO.succeed(ðŸ‚¾)
      case 'Q' => ZIO.succeed(ðŸ‚½)
      case 'J' => ZIO.succeed(ðŸ‚»)
      case 'T' => ZIO.succeed(ðŸ‚º)
      case '9' => ZIO.succeed(ðŸ‚¹)
      case '8' => ZIO.succeed(ðŸ‚¸)
      case '7' => ZIO.succeed(ðŸ‚·)
      case '6' => ZIO.succeed(ðŸ‚¶)
      case '5' => ZIO.succeed(ðŸ‚µ)
      case '4' => ZIO.succeed(ðŸ‚´)
      case '3' => ZIO.succeed(ðŸ‚³)
      case '2' => ZIO.succeed(ðŸ‚²)
      case _   => ZIO.dieMessage(s"Unknown card $c")
  given Ordering[Card] = Ordering.by[Card, Int](_.ordinal)
